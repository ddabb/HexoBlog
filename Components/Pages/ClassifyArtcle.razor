@page "/classifyArtcle"
@using HexoBlog.Model
@using HexoBlog.Service
@using System.Net;
@using System.Linq;
@using System.Net;
@inject ClassifyService CategoryService
@inject NavigationManager nav

@if (CategoryService.Articles.Count == 0)
{
    <p>classifyArtcle in...</p>
}
else
{

    <ul>
        @foreach (var category in CategoryService.Articles)
        {
            <li>
                <a href="#" @onclick="() => GoToTrueArticle(category.Title,category.Path)">@category.Title</a>
                <p>Path: @category.Title</p>
                <p>Path: @category.Path</p>

            </li>
        }
    </ul>
}

@code {

    [Parameter]
    public string Name { get; set; }

    protected override async Task OnInitializedAsync()
    {

        await CategoryService.LoadTagArticleAsync(nav);

 
    }

    private void GoToTrueArticle(string categoryName, string path)
    {
        // 根据categoryName构建name参数
        var name = $"{categoryName}.json";
        System.Diagnostics.Debug.WriteLine($"GoToTrueArticle categoryName {categoryName}");
        System.Diagnostics.Debug.WriteLine($"GoToTrueArticle path {path}");
        // 导航到articles页面并传递参数
        nav.NavigateTo($"articles?name={path}");
    }
    // 用于处理导航事件的方法（可选，如果不需要在点击时执行其他操作，可以移除）
    private void NavigateToArticle()
    {
        // 这里可以执行一些在点击链接前的逻辑，比如确认对话框等
        // 如果不需要，这个方法可以留空
    }
}