@page "/tags"
@using HexoBlog.Model
@using HexoBlog.Service
@inject ClassifyService CategoryService
@inject NavigationManager NavigationManager




@if (CategoryService.Tags.Count == 0)
{
    <p>Loading...</p>
}
else
{
    <ul>
        @foreach (var category in CategoryService.Tags)
        {
            <li>
                <a href="#" @onclick="() => GoToTagArticle(category.Name,category.Path)">@category.Name</a>
                <p>Path: @category.Name</p>
                <p>Path: @category.Path</p>
                <p>Count: @category.Count</p>
            </li>
        }
    </ul>
}

@code {
    protected override async Task OnInitializedAsync()
    {
        await CategoryService.LoadTagAsync();
    }


    private void GoToTagArticle(string categoryName, string path)
    {
        // 根据categoryName构建name参数
        var name = $"{categoryName}.json";
        System.Diagnostics.Debug.WriteLine($"categoryName {categoryName}");
        System.Diagnostics.Debug.WriteLine($"path {path}");
        // 导航到articles页面并传递参数
        NavigationManager.NavigateTo($"classifyArtcle?name={name}");
    }
    // 用于处理导航事件的方法（可选，如果不需要在点击时执行其他操作，可以移除）
    private void NavigateToArticle()
    {
        // 这里可以执行一些在点击链接前的逻辑，比如确认对话框等
        // 如果不需要，这个方法可以留空
    }
}